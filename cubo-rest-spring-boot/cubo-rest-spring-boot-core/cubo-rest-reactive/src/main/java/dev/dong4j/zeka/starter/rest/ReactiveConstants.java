package dev.dong4j.zeka.starter.rest;

/**
 * 反应式 Web 模块常量定义
 *
 * 该类定义了反应式 Web 开发中使用的各种常量，主要用于在 WebFlux 环境下的
 * 请求处理、错误处理和网关集成等场景。这些常量确保了整个模块中键名的一致性，
 * 避免了硬编码字符串可能带来的问题。
 *
 * 主要用途：
 * 1. 提供 WebFlux 环境下的标准键名定义
 * 2. 确保网关路由信息的一致性传递
 * 3. 简化反应式环境下的上下文信息管理
 * 4. 为日志记录和错误处理提供标准化的键名
 *
 * 设计特点：
 * - 所有常量都是 public static final，便于全局访问
 * - 采用语义化的命名，提高代码可读性
 * - 专门针对反应式编程场景优化
 * - 与框架的其他模块保持命名一致性
 *
 * 使用场景：
 * - 在 WebFlux 拦截器中存储和获取网关路由信息
 * - 错误处理器中记录请求路由上下文
 * - 日志系统中统一路由信息的键名
 * - 监控系统中的链路追踪标识
 *
 * @author dong4j
 * @version 1.0.0
 * @email "mailto:dong4j@gmail.com"
 * @date 2022.01.20 23:22
 * @since 1.0.0
 */
public class ReactiveConstants {
    /**
     * 网关路由信息键名
     * <p>
     * 该常量用于在 ServerWebExchange 的属性中存储和获取网关路由信息。
     * 在网关环境下，这个键名被用来传递当前请求的路由配置信息，
     * 便于后续的处理器（如错误处理器、拦截器等）获取路由上下文。
     * <p>
     * 使用场景：
     * - 网关错误处理时记录具体的路由信息
     * - 日志系统中输出当前处理的路由配置
     * - 监控系统中跟踪请求的路由路径
     * - 自定义处理器中获取路由元数据
     */
    public static final String GATEWAY_ROUTER = "gateway_router";
}
