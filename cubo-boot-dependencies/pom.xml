<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>dev.dong4j</groupId>
        <artifactId>arco-dependencies-parent</artifactId>
        <version>2.0.0-SNAPSHOT</version>
        <relativePath/>
    </parent>

    <artifactId>cubo-boot-dependencies</artifactId>
    <packaging>pom</packaging>
    <name>Cubo Boot Dependencies</name>
    <description>Cubo Boot 项目依赖库</description>

    <!-- 统一管理版本 -->
    <properties>
        <cubo-boot-dependencies.version>${global.version}</cubo-boot-dependencies.version>

        <p6spy.version>3.9.1</p6spy.version>
        <druid.version>1.2.4</druid.version>
        <rocketmq-spring-boot-starter.version>2.2.3</rocketmq-spring-boot-starter.version>
    </properties>

    <!-- 统一管理依赖 -->
    <dependencyManagement>
        <dependencies>
            <!-- 引入核心包依赖(这个是给业务端用的, 这样只需要引入  cubo-boot-dependencies 即可 -->
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>blen-kernel-dependencies</artifactId>
                <!-- 使用不了 blen-dependencies.version, 因为定义在 arco-project-dependencies, 所以只能使用 arco-supreme global.version -->
                <version>${global.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--mark-->
            <!--region dict-->
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-dict-spring-boot-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-dict-spring-boot-autoconfigure</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-dict-spring-boot-starter</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!--endregion-->

            <!--region openapi-->
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-openapi-spring-boot-core</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-openapi-spring-boot-autoconfigure</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-openapi-spring-boot-starter</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-openapi-common</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-openapi-dubbo</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-openapi-knife4j</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-openapi-dubbo-spring-boot-starter</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-openapi-knife4j-spring-boot-starter</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!--endregion-->
            <!--region mybatis-->
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-mybatis-spring-boot-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-mybatis-spring-boot-autoconfigure</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-mybatis-spring-boot-starter</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>p6spy</groupId>
                <artifactId>p6spy</artifactId>
                <version>${p6spy.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-extension</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-jsqlparser</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-spring</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <!--endregion-->
            <!--region rest-->
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-rest-spring-boot-core</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-rest-spring-boot-autoconfigure</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-rest-spring-boot-starter</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-rest-common</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-rest-servlet</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-rest-reactive</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-rest-servlet-spring-boot-starter</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-rest-reactive-spring-boot-starter</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!--endregion-->

            <!--region endpoint-->
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-endpoint-spring-boot-core</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-endpoint-spring-boot-autoconfigure</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-endpoint-spring-boot-starter</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-endpoint-common</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-endpoint-reactive</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-endpoint-servlet</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-endpoint-reactive-spring-boot-starter</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-endpoint-servlet-spring-boot-starter</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!--endregion-->

            <!--region combiner -->
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-framework-spring-boot-starter</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-ssm-spring-boot-starter</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <!--endregion-->

            <!--region logsystem-->
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-logsystem-common</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-logsystem-simple</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
                <scope>provided</scope>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-logsystem-log4j2</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-logsystem-record</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-logsystem-spring-boot-autoconfigure</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-logsystem-log4j2-spring-boot-starter</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-logsystem-record-spring-boot-starter</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <!--endregion-->

            <!--region launcher -->
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-launcher-spring-boot-core</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-launcher-spring-boot-autoconfigure</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-launcher-spring-boot-starter</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <!--endregion-->

            <!--region messaging-->
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-messaging-spring-boot-core</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-messaging-common</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-messaging-kafka</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-messaging-rocketmq</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-messaging-spring-boot-autoconfigure</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-messaging-rocketmq-spring-boot-starter</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.dong4j</groupId>
                <artifactId>cubo-messaging-kafka-spring-boot-starter</artifactId>
                <version>${cubo-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.rocketmq</groupId>
                <artifactId>rocketmq-spring-boot-starter</artifactId>
                <version>${rocketmq-spring-boot-starter.version}</version>
            </dependency>
            <!--endregion-->

        </dependencies>
    </dependencyManagement>

</project>



